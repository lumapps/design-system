name: "Release Workflow"

# Manual trigger workflow to automatically setup, build and push a new release on NPM

on:
    workflow_dispatch:
        inputs:
            releaseType:
                description: 'Release type'
                required: true
                default: 'patch'
                type: choice
                options:
                    - patch
                    - minor
                    - major

concurrency:
    group: "${{ github.workflow }}-${{ github.ref_name }}"
    cancel-in-progress: true

jobs:
    publish_version:
        name: "Publish version"
        runs-on: ubuntu-latest
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: "Setup"
                uses: ./.github/actions/setup

            -   name: "Upgrade package versions"
                id: version
                uses: ./.github/actions/upgrade-package-versions
                with:
                    releaseType: '${{ inputs.releaseType }}'

            -   name: "Build libs"
                run: yarn build:libs

            -   name: "Publish version to NPM"
                env:
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                    DIST_TAG: ${{ fromJSON(steps.version.outputs.result).distTag }}
                run: |
                    for package in $(echo packages/lumx-*);
                    do
                        (echo "Publishing $package"; cd $package/dist; npm publish --tag $DIST_TAG)
                    done

            -   name: "Git commit, tag & push"
                id: git
                run: |
                    git config --global user.name "github-actions"
                    git config --global user.email "github-actions@users.noreply.github.com"

                    branch="${{ fromJSON(steps.version.outputs.result).branch }}"
                    echo "branch=$branch" >> $GITHUB_OUTPUT

                    tag="v${{ fromJSON(steps.version.outputs.result).nextVersion }}"
                    echo "tag=$tag" >> $GITHUB_OUTPUT

                    # Commit and push branch
                    commit="chore(release): release $tag"
                    echo "commit=$commit" >> $GITHUB_OUTPUT
                    git commit -am "$commit"
                    git push origin "$branch"

                    # TODO: need to a new git user to push tags
                    # Tag and push tag
                    #git tag "$tag"
                    #git push origin "$tag"

        outputs:
            releaseType: ${{ fromJSON(steps.version.outputs.result).releaseType }}
            baseRef: ${{ fromJSON(steps.version.outputs.result).refName }}
            commit: ${{ steps.git.outputs.commit }}
            branch: ${{ steps.git.outputs.branch }}
            versionTag: ${{ steps.git.outputs.tag }}

    create_gh_pull_request:
        name: "Create pull request"
        runs-on: ubuntu-latest
        needs: [ publish_version ]
        steps:
            -   name: "Create pull request"
                uses: actions/github-script@v6
                with:
                    script: |
                        github.rest.pulls.create({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            title: '${{ needs.publish_version.outputs.commit }}',
                            head: '${{ needs.publish_version.outputs.branch }}',
                            base: '${{ needs.publish_version.outputs.baseRef }}',
                            body: 'https://github.com/lumapps/design-system/releases/tag/${{ needs.publish_version.outputs.versionTag }}\nTODO: `git tag ${{ needs.publish_version.outputs.versionTag }}` & `git push origin ${{ needs.publish_version.outputs.versionTag }}`',
                            draft: false,
                        });
