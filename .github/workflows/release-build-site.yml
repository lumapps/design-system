name: "Build & Push Demo Site"

# Build and push the demo site on the docker registry when a new release tag is pushed on GitHub

on:
    push:
        tags:
            - v*
            - '!v*-alpha.*' # ignore alpha versions

concurrency:
    group: "${{ github.workflow }}-${{ github.ref_name }}"
    cancel-in-progress: true

jobs:
    build_demo_site:
        name: "Build & push demo site"
        timeout-minutes: 30
        runs-on: ubuntu-latest
        env:
            GCP_PROD_REGISTRY: gcr.io/lumapps-registry
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3

            -   name: Login to GCR
                uses: lumapps/shared-github-actions/actions/lumapps_registries@v1
                with:
                    gcp_credentials: ${{ secrets.GCR_PROD_RW_CREDS }}

            -   run: |
                    echo "git_commit=$(git rev-parse HEAD)" >> $GITHUB_ENV
                    echo "build_date=$(date --rfc-3339=seconds)" >> $GITHUB_ENV

            -   name: "Docker metadata"
                id: meta
                uses: docker/metadata-action@f206c36955d3cc6213c38fb3747d9ba4113e686a
                with:
                    tags: |
                        type=match,pattern=/^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
                        type=raw,enable=true,priority=200,value=${{ env.git_commit }},event=tag
                    images: |
                        ${{ env.GCP_PROD_REGISTRY }}/design-system
                    labels: |
                        com.lumapps.image.created=${{ env.build_date }}
                        com.lumapps.image.sha1=${{ env.git_commit }}
                        com.lumapps.image.authors=frontend@lumapps.com
                        com.lumapps.image.version={{tag}}

            -   name: "Build image"
                uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
                with:
                    context: ./
                    file: ${{ matrix.dockerfile }}
                    builder: ${{ steps.buildx_setup.outputs.name }}
                    build-args: version=${{ env.version }}
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    cache-from: type=gha, scope=${{ github.workflow }}
                    cache-to: type=gha, scope=${{ github.workflow }}, mode=max
