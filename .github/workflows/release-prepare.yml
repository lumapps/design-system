name: "Prepare Release Workflow"

# Manual trigger workflow to automatically setup a new release PR (built & publish on merge)

on:
    pull_request

concurrency:
    group: "${{ github.workflow }}-${{ github.ref_name }}"
    cancel-in-progress: true

jobs:
    prepare_release:
        name: "Prepare Release"
        runs-on: ubuntu-latest
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: "Setup"
                uses: ./.github/actions/setup

            -   name: "Increment package versions"
                id: version
                uses: ./.github/actions/increment-package-versions
                with:
                    releaseType: 'minor'

            -   name: "Check build libs"
                run: yarn build:libs

            -   name: "Git commit & push"
                id: git
                run: |
                    git config --global user.name "github-actions"
                    git config --global user.email "github-actions@users.noreply.github.com"

                    branch="${{ steps.version.outputs.releaseBranch }}"
                    echo "branch=$branch" >> $GITHUB_OUTPUT

                    versionName="v${{ steps.version.outputs.nextVersion }}"
                    echo "versionName=$versionName" >> $GITHUB_OUTPUT

                    # Commit and push branch
                    commit="chore(release): release $versionName"
                    echo "commit=$commit" >> $GITHUB_OUTPUT
                    git commit -am "$commit"
                    git push origin "$branch"

            -   name: "Create pull request"
                uses: actions/github-script@v6
                with:
                    script: |
                        github.rest.pulls.create({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            base: 'master',
                            head: '${{ steps.git.outputs.branch }}',
                            title: '${{ steps.git.outputs.commit }}',
                            body: 'Release ${{ steps.git.outputs.versionName }}\n',
                            draft: true,
                        });
