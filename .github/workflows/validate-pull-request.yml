name: "CI"

on:
    pull_request:
        types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
    group: ${{ github.head_ref }}-validate-pr
    cancel-in-progress: true

jobs:
    lint:
        if: github.event.pull_request.draft == false
        timeout-minutes: 30
        runs-on: ubuntu-latest
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3

            -   name: "Setup"
                uses: ./.github/actions/setup

            -   name: "Run packages lint"
                run: yarn lint:code

    test:
        if: github.event.pull_request.draft == false
        timeout-minutes: 30
        runs-on: ubuntu-latest
        strategy:
            matrix:
                packageVersions: [default, 'react@18.3.1 react-dom@18.3.1 @testing-library/react@16.3.0']
        # Making sure we have a clean job name on 'default' package so that it matches the required "test" check
        name: "test${{ matrix.packageVersions != 'default' && format(' ({0})', matrix.packageVersions) || '' }}"
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3

            -   name: "Setup"
                uses: ./.github/actions/setup

            -   name: "Switch react version"
                if: ${{ matrix.packageVersions != 'default' }}
                run: yarn up ${{ matrix.packageVersions }}

            -   name: "Run unit tests"
                run: |
                    sudo timedatectl set-timezone Europe/Paris
                    yarn test

    type-check:
        if: github.event.pull_request.draft == false
        timeout-minutes: 30
        runs-on: ubuntu-latest
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3

            -   name: "Setup"
                uses: ./.github/actions/setup

            -   name: "Run code type check"
                run: yarn type-check


    Github-actions-validator:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3

            -   name: "Github actions validator"
                uses: lumapps/github-actions-validator@v2

    Commit-message-validation:
        if: github.event.pull_request.draft == false
        runs-on: ubuntu-latest
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v3

            -   name: "Commit message validation"
                uses: lumapps/commit-message-validator@master
                with:
                    no_jira: true
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
