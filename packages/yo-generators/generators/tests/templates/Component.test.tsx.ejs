import React from 'react';

import { render } from '@testing-library/react';
import { commonTestsSuiteRTL } from '@lumx/react/testing/utils';
import { getByClassName } from '@lumx/react/testing/utils/queries';
import userEvent from '@testing-library/user-event';

import { <%= componentName %>, <%= componentName %>Props } from './<%= componentName %>';

const CLASSNAME = <%= componentName %>.className as any;

/**
 * Mounts the component and returns common DOM elements / data needed in multiple tests further down.
 */
const setup = (props: Partial<<%= componentName %>Props> = {}) => {
    render(<<%= componentName %> {...props} />);
    const component = getByClassName(document.body, CLASSNAME);
    return { props, component };
};

describe(`<${<%= componentName %>.displayName}>`, () => {
    describe('Props', () => {
        it('should render default', () => {
            const { component } = setup();

            expect(component).toBeInTheDocument();
            // TODO: add assertions
        });
    });

    describe('Events', () => {
        // Example of click event test
        it('should trigger `onClick` when clicked', async () => {
            const onClick = jest.fn();
            const { component } = setup({ onClick });

            await userEvent.click(component);

            expect(onClick).toHaveBeenCalled();
        });
    });

    // Common tests suite.
    commonTestsSuiteRTL(setup, {
        baseClassName: CLASSNAME,
        forwardClassName: 'component',
        forwardAttributes: 'component',
        forwardRef: 'component',
    });
});
