@mixin lumx-state-high($state, $color, $theme) {
    @if $state == lumx-base-const('state', 'DEFAULT') {
        @if $theme == lumx-base-const('theme', 'LIGHT') {
            background-color: lumx-color-variant($color, 'N');
            color: lumx-color-variant('light', 'N');
        } @else if $theme == lumx-base-const('theme', 'DARK') {
            background-color: lumx-color-variant('light', 'N');
            color: lumx-color-variant($color, 'N');
        }
    } @else if $state == lumx-base-const('state', 'HOVER') {
        @if $theme == lumx-base-const('theme', 'LIGHT') {
            background-color: lumx-color-variant($color, 'D1');
        } @else if $theme == lumx-base-const('theme', 'DARK') {
            background-color: lumx-color-variant('light', 'L1');
        }
    } @else if $state == lumx-base-const('state', 'ACTIVE') {
        @if $theme == lumx-base-const('theme', 'LIGHT') {
            background-color: lumx-color-variant($color, 'D2');
        } @else if $theme == lumx-base-const('theme', 'DARK') {
            background-color: lumx-color-variant('light', 'L2');
        }
    } @else if $state == lumx-base-const('state', 'FOCUS') {
        @if $theme == lumx-base-const('theme', 'LIGHT') {
            box-shadow: 0 0 0 2px lumx-color-variant($color, 'L3');
        } @else if $theme == lumx-base-const('theme', 'DARK') {
            box-shadow: 0 0 0 2px lumx-color-variant('light', 'L3');
        }
    }
}

@mixin lumx-state-medium($state, $color, $has-focus-inset: false) {
    @if $state == lumx-base-const('state', 'DEFAULT') {
        background-color: lumx-color-variant($color, 'L5');
        color: lumx-color-variant($color, 'N');
    } @else if $state == lumx-base-const('state', 'HOVER') {
        background-color: lumx-color-variant($color, 'L4');
    } @else if $state == lumx-base-const('state', 'ACTIVE') {
        background-color: lumx-color-variant($color, 'L3');
    } @else if $state == lumx-base-const('state', 'FOCUS') {
        @if $has-focus-inset == true {
            box-shadow: inset 0 0 0 2px lumx-color-variant($color, 'L3');
        } @else {
            box-shadow: 0 0 0 2px lumx-color-variant($color, 'L3');
        }
    }
}

@mixin lumx-state-as-selected($state, $theme, $has-focus-inset: false) {
    @if $theme == lumx-base-const('theme', 'LIGHT') {
        @if $state == lumx-base-const('state', 'DEFAULT') {
            background-color: lumx-color-variant('primary', 'L4');
            color: lumx-color-variant('primary', 'D2');
        } @else if $state == lumx-base-const('state', 'HOVER') {
            background-color: lumx-color-variant('primary', 'L3');
        } @else if $state == lumx-base-const('state', 'ACTIVE') {
            background-color: lumx-color-variant('primary', 'L2');
        } @else if $state == lumx-base-const('state', 'FOCUS') {
            @if $has-focus-inset == true {
                box-shadow: inset 0 0 0 2px lumx-color-variant('primary', 'L3');
            } @else {
                box-shadow: 0 0 0 2px lumx-color-variant('primary', 'L3');
            }
        }
    } @else if $theme == lumx-base-const('theme', 'DARK') {
        @if $state == lumx-base-const('state', 'DEFAULT') {
            background-color: lumx-color-variant('light', 'L2');
            color: lumx-color-variant('dark', 'N');
        } @else if $state == lumx-base-const('state', 'HOVER') {
            background-color: lumx-color-variant('light', 'L3');
        } @else if $state == lumx-base-const('state', 'ACTIVE') {
            background-color: lumx-color-variant('light', 'L4');
        } @else if $state == lumx-base-const('state', 'FOCUS') {
            @if $has-focus-inset == true {
                box-shadow: inset 0 0 0 2px lumx-color-variant('light', 'L3');
            } @else {
                box-shadow: 0 0 0 2px lumx-color-variant('light', 'L3');
            }
        }
    }
}

@mixin lumx-state-low($state, $color, $has-focus-inset: false) {
    @if $state == lumx-base-const('state', 'DEFAULT') {
        background-color: transparent;
        color: lumx-color-variant($color, 'N');
    } @else if $state == lumx-base-const('state', 'HOVER') {
        background-color: lumx-color-variant($color, 'L5');
    } @else if $state == lumx-base-const('state', 'ACTIVE') {
        background-color: lumx-color-variant($color, 'L4');
    } @else if $state == lumx-base-const('state', 'FOCUS') {
        @if $has-focus-inset == true {
            box-shadow: inset 0 0 0 2px lumx-color-variant($color, 'L3');
        } @else {
            box-shadow: 0 0 0 2px lumx-color-variant($color, 'L3');
        }
    }
}

@mixin lumx-state-disabled-text($theme) {
    pointer-events: none;

    @if $theme == lumx-base-const('theme', 'LIGHT') {
        color: lumx-color-variant('dark', 'L3');
    } @else if $theme == lumx-base-const('theme', 'DARK') {
        color: lumx-color-variant('light', 'L3');
    }
}

@mixin lumx-state-disabled-input() {
    opacity: 0.5;
    pointer-events: none;
}

@mixin lumx-state($state, $emphasis, $color, $theme: null, $has-focus-inset: false) {
    @if $emphasis == lumx-base-const('emphasis', 'HIGH') {
        @include lumx-state-high($state, $color, $theme);
    } @else if $emphasis == lumx-base-const('emphasis', 'MEDIUM') {
        @include lumx-state-medium($state, $color, $has-focus-inset);
    } @else if $emphasis == lumx-base-const('emphasis', 'LOW') {
        @include lumx-state-low($state, $color, $has-focus-inset);
    }
}

@mixin lumx-state-transition() {
    transition-duration: $lumx-state-transition-duration;
    transition-property: background-color, box-shadow, color;
}
