@use "sass:map";
@use "sass:math";
@use "sass:string";

/* ==========================================================================
   Thumbnail
   ========================================================================== */

.#{$lumx-base-prefix}-thumbnail {
    $self: &;

    position: relative;
    flex-shrink: 0;
    padding: 0;
    background: none;
    border: none;
    outline: none;

    &--fill-height {
        &,
        #{$self}__background {
            display: flex;
            flex: 1 1 auto;
            flex-direction: column;
            justify-content: center;
            height: 100%;
            min-height: 100%;
        }

        #{$self}__image {
            width: unset;
        }

        &:not(.#{$lumx-base-prefix}-thumbnail--aspect-ratio-original) {
            #{$self}__image {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
            }
        }
    }

    &__background {
        position: relative;
        display: block;
        width: 100%;
        overflow: hidden;

        #{$self}--variant-rounded & {
            border-radius: var(--lumx-border-radius);
        }
    }

    &__image {
        display: block;
        max-width: 100%;
        max-height: 100%;
        font-size: 0;
        background-repeat: no-repeat;
        background-position: center;
        background-size: var(--lumx-thumbnail-image-object-fit, cover);

        &--has-defined-size {
            width: fit-content;
            height: fit-content;
        }
    }

    &__background,
    &__image {
        #{$self}--align-left & {
            margin-right: auto;
        }

        #{$self}--align-center & {
            margin: 0 auto;
        }

        #{$self}--align-right & {
            margin-left: auto;
        }
    }

    &__badge {
        position: absolute;
        right: math.div(-$lumx-spacing-unit, 2);
        bottom: math.div(-$lumx-spacing-unit, 2);
    }

    &__fallback {
        display: block;
    }
}

/* Thumbnail sizes
   ========================================================================== */

@each $key, $size in $lumx-sizes {
    .#{$lumx-base-prefix}-thumbnail--size-#{$key} {
        width: $size;
    }
}

/* Thumbnail aspect ratio
   ========================================================================== */

.#{$lumx-base-prefix}-thumbnail:not(.#{$lumx-base-prefix}-thumbnail--aspect-ratio-original) {
    .#{$lumx-base-prefix}-thumbnail__image {
        object-fit: var(--lumx-thumbnail-image-object-fit, cover);
        object-position: center;
        width: 100%;
        height: 100%;

        // When using object-fit:cover + ratio 1/1, Chrome switches to pixelated downsizing algo
        // The following prevent this so the image is correctly downsized using blurring effect
        backface-visibility: hidden;

        @supports not (aspect-ratio: 1 / 1) {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }
    }
}

@supports (aspect-ratio: 1 / 1) {
    @each $key, $aspect-ratio-fraction in $lumx-thumbnail-aspect-ratio-fraction {
        .#{$lumx-base-prefix}-thumbnail--aspect-ratio-#{$key}:not(.#{$lumx-base-prefix}-thumbnail--fill-height)
        .#{$lumx-base-prefix}-thumbnail__image {
            aspect-ratio: var(--lumx-thumbnail-aspect-ratio, string.unquote($aspect-ratio-fraction));
        }
    }
}

@supports not (aspect-ratio: 1 / 1) {
    @each $key, $aspect-ratio in $lumx-thumbnail-aspect-ratio {
        .#{$lumx-base-prefix}-thumbnail--aspect-ratio-#{$key}:not(.#{$lumx-base-prefix}-thumbnail--fill-height)
        .#{$lumx-base-prefix}-thumbnail__background {
            padding-top: $aspect-ratio;
        }
    }
}

/* Thumbnail object fit
   ========================================================================== */

.#{$lumx-base-prefix}-thumbnail--object-fit-cover {
    --lumx-thumbnail-image-object-fit: cover;
}

.#{$lumx-base-prefix}-thumbnail--object-fit-contain {
    --lumx-thumbnail-image-object-fit: contain;
}

/* Thumbnail states
   ========================================================================== */

.#{$lumx-base-prefix}-thumbnail--is-clickable {
    &:not(.#{$lumx-base-prefix}-thumbnail--fill-height) {
        display: block;
    }

    position: relative;
    cursor: pointer;

    &::after {
        @include lumx-state-transition;

        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        pointer-events: none;
        content: "";
    }

    /* Hover */
    &:hover::after,
    &:focus::after {
        @include lumx-state(lumx-base-const("state", "HOVER"), lumx-base-const("emphasis", "LOW"), "dark");
    }

    /* Active */
    &:active::after {
        @include lumx-state(lumx-base-const("state", "ACTIVE"), lumx-base-const("emphasis", "LOW"), "dark");
    }
}

/* Focused (variant rounded) */
.#{$lumx-base-prefix}-thumbnail--variant-rounded.#{$lumx-base-prefix}-thumbnail--is-clickable {
    &[data-focus-visible-added]::after {
        border-radius: var(--lumx-border-radius);
    }
}

/* Focused (light theme) */
.#{$lumx-base-prefix}-thumbnail--theme-light.#{$lumx-base-prefix}-thumbnail--is-clickable {
    &[data-focus-visible-added]::after {
        @include lumx-state(lumx-base-const("state", "FOCUS"), lumx-base-const("emphasis", "LOW"), "dark");
    }
}

/* Focused (dark theme) */
.#{$lumx-base-prefix}-thumbnail--theme-dark.#{$lumx-base-prefix}-thumbnail--is-clickable {
    &[data-focus-visible-added]::after {
        @include lumx-state(lumx-base-const("state", "FOCUS"), lumx-base-const("emphasis", "LOW"), "light");
    }
}

/* Loading state */
.#{$lumx-base-prefix}-thumbnail--is-loading {
    &.#{$lumx-base-prefix}-thumbnail--theme-light .#{$lumx-base-prefix}-thumbnail__background {
        @include lumx-skeleton("light");
    }

    &.#{$lumx-base-prefix}-thumbnail--theme-dark .#{$lumx-base-prefix}-thumbnail__background {
        @include lumx-skeleton("dark");
    }
}

/* Error state */
.#{$lumx-base-prefix}-thumbnail--has-error {
    /** Icon fallback */
    &.#{$lumx-base-prefix}-thumbnail--has-icon-error-fallback {
        .#{$lumx-base-prefix}-thumbnail__fallback {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        &.#{$lumx-base-prefix}-thumbnail--theme-light .#{$lumx-base-prefix}-thumbnail__fallback {
            background-color: lumx-color-variant("dark", "L6");
        }

        &.#{$lumx-base-prefix}-thumbnail--theme-dark .#{$lumx-base-prefix}-thumbnail__fallback {
            background-color: lumx-color-variant("light", "L6");
        }
    }

    /* Custom fallback */
    &.#{$lumx-base-prefix}-thumbnail--has-custom-error-fallback {
        /* Disable aspect ratio */
        .#{$lumx-base-prefix}-thumbnail__background {
            padding-top: 0;
        }
    }
}

/* Thumbnail badge mask
   ========================================================================== */

$badge-radius-size: math.div(map.get($lumx-sizes, lumx-base-const("size", "XS")), 2) + 2;

.#{$lumx-base-prefix}-thumbnail--has-badge {
    .#{$lumx-base-prefix}-thumbnail__background,
    .#{$lumx-base-prefix}-thumbnail__fallback {
        mask-image:
            radial-gradient(
                circle at calc(100% - #{$badge-radius-size - 6}) calc(100% - #{$badge-radius-size - 6}),
                transparent $badge-radius-size,
                black $badge-radius-size + 1
            );
    }
}
