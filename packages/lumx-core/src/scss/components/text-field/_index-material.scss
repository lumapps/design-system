.#{$lumx-base-prefix}-text-field {
    $self: &;

    position: relative;
    padding-top: $lumx-spacing-unit * 4;
    padding-bottom: $lumx-spacing-unit;

    &__header {
        @include lumx-text-field-material-header;

        #{$self}--has-placeholder &,
        #{$self}--has-value &,
        #{$self}--is-focus &,
        #{$self}--has-chips & {
            transform: translateY(0);
        }
    }

    &__label {
        @include lumx-text-field-material-float(lumx-base-const('position', 'LEFT'));

        line-height: $lumx-text-field-height !important;

        #{$self}--theme-light & {
            @include lumx-text-field-material-label(lumx-base-const('theme', 'LIGHT'));
        }

        #{$self}--theme-dark & {
            @include lumx-text-field-material-label(lumx-base-const('theme', 'DARK'));
        }

        #{$self}--has-icon & {
            transform: translateX(28px);
        }

        #{$self}--has-placeholder &,
        #{$self}--has-value &,
        #{$self}--is-focus &,
        #{$self}--has-chips & {
            transform: scale(0.75);
        }
    }

    &__char-counter {
        @include lumx-text-field-material-float(lumx-base-const('position', 'RIGHT'));

        #{$self}--has-placeholder &,
        #{$self}--has-value &,
        #{$self}--is-focus &,
        #{$self}--has-chips & {
            transform: scale(0.75);
        }

        span {
            line-height: $lumx-text-field-height !important;
        }
    }

    &__wrapper {
        #{$self}--theme-light & {
            @include lumx-text-field-material-wrapper(lumx-base-const('theme', 'LIGHT'));
        }

        #{$self}--theme-dark & {
            @include lumx-text-field-material-wrapper(lumx-base-const('theme', 'DARK'));
        }

        #{$self}--has-input-clear & {
            padding-right: 0 !important;
        }
    }

    &__input-native {
        input {
            @include lumx-text-field-material-input-native('input');
        }

        textarea {
            @include lumx-text-field-material-input-native('textarea');
        }
    }
}

/* Text field states
   ========================================================================== */

// Focus state
.#{$lumx-base-prefix}-text-field--is-focus {
    .#{$lumx-base-prefix}-text-field__wrapper {
        @include lumx-text-field-material-wrapper-focus;
    }
}

.#{$lumx-base-prefix}-text-field--theme-light.#{$lumx-base-prefix}-text-field--is-focus {
    .#{$lumx-base-prefix}-text-field__label {
        @include lumx-text-field-material-label-focus(lumx-base-const('theme', 'LIGHT'));
    }
}

.#{$lumx-base-prefix}-text-field--theme-dark.#{$lumx-base-prefix}-text-field--is-focus {
    .#{$lumx-base-prefix}-text-field__label {
        @include lumx-text-field-material-label-focus(lumx-base-const('theme', 'DARK'));
    }
}

/* Text field validity
   ========================================================================== */

.#{$lumx-base-prefix}-text-field--theme-light.#{$lumx-base-prefix}-text-field--is-valid {
    .#{$lumx-base-prefix}-text-field__label {
        @include lumx-text-field-material-label-validity('valid');
    }

    .#{$lumx-base-prefix}-text-field__wrapper {
        @include lumx-text-field-material-wrapper-validity('valid');
    }
}

.#{$lumx-base-prefix}-text-field--theme-light.#{$lumx-base-prefix}-text-field--has-error {
    .#{$lumx-base-prefix}-text-field__label {
        @include lumx-text-field-material-label-validity('error');
    }

    .#{$lumx-base-prefix}-text-field__wrapper {
        @include lumx-text-field-material-wrapper-validity('error');
    }
}
